imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: ru
    app.path.avatar_images: /uploads/images/avatars


framework:
    #esi:             ~
    translator:      #{ fallbacks: ["%locale%"] }
        enabled:    true
        fallback:   "%locale%"
        logging:    false
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    translator: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
    - 'bootstrap_3_layout.html.twig' 
    - 'VichUploaderBundle:Form:fields.html.twig'
    - 'form/fields.html.twig'
    - LexikFormFilterBundle:Form:form_div_layout.html.twig
#    - 'JbFileUploaderBundle:Form:fields.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/../var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path:     "%database_path%"
        
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
                
            
# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
    
fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: d_bar@mail.ru
        sender_name: Admin
    group:
        group_class: AppBundle\Entity\Group
    registration:
        form:
            type: AppBundle\Form\RegistrationType    
    profile:
        form:
            type: AppBundle\Form\ProfileFormType        

lexik_form_filter:
    listeners:
        doctrine_orm: true
        doctrine_dbal: false
        doctrine_mongodb: false
    condition_pattern: text.contains        
        
easy_admin:
    formats:
        date:     'd.m.Y'
        time:     'H:i'
        datetime: 'd.m.Y H:i:s'
    list:
        max_results: 100
    entities:
        User:
            class: AppBundle\Entity\User
            list:
                fields:
                    - 'id'
                    - 'username'
                    - 'email'
                    - 'enabled'
                    - 'lastlogin'
                    - 'roles'
                    - { property: 'avatar', type: 'image', base_path: %app.path.avatar_images% }
#                    - 'GroupNames'
            show:
                    - 'username'
                    - 'email'
                    - 'enabled'
                    - 'lastlogin'
                    - { property: 'avatar', type: 'image', base_path: %app.path.avatar_images% }
                    # if administrators are allowed to edit users' passwords and roles, add this:
                    - { property: 'plainPassword', type: 'text', type_options: { required: false } }
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
                    - { property: 'imageFile', type: 'vich_image' }
                    - fio
                    - sections
                    - odrers
#                    - { property: 'updatedAt', default: '0000-00-00 00:00:00' }
            form:
                fields:
                    - 'username'
                    - { property: 'email', type: 'email', label: 'Email' }
                    - 'enabled'
#                    - { property: 'lastlogin', default: '0000-00-00 00:00:00' }
#                    - { property: 'avatar', type: 'image', base_path: %app.path.avatar_images% }
                    # if administrators are allowed to edit users' passwords and roles, add this:
                    - { property: 'plainPassword', type: 'text', type_options: { required: false } }
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
                    - { property: 'imageFile', type: 'vich_image' }
                    - fio
                    - sections
#                    - odrers
#                    - { property: 'updatedAt', default: '0000-00-00 00:00:00' }
        Group:    
            class: AppBundle\Entity\Group   
            list:
                fields:
                    - 'id'
                    - 'name'
                    - 'roles'
            form:
                fields:
                    - name
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
        Specialization: 
            class: AppBundle\Entity\SpecSection  
            list:
                fields:
                    - id
                    - name
                    - sections
            form:
                fields:
                    - id
                    - name
                    - { property: 'sections', type_options: { required: false } }
            new:
                fields:
                    - '-id'  
                    - '-sections'
        Section: 
            class: AppBundle\Entity\Section
            list:
                sort: 'spec'
                fields:
                    - id
                    - name
                    - id_spec
                    - spec
                    - users
                    - orders
            form:
                fields:
                    - id
                    - name
                    - { property: 'spec', type_options: { required: false } }
            new:
                fields:
                    - '-id'
        EventType:
            class: AppBundle\Entity\EventType
            new:
                fields:
                    - '-id'  
        LegalEntity:
            class: AppBundle\Entity\LegalEntity
            list:
#                sort: 'name'
                fields:
                    - id
                    - name
                    - hideName
                    - user
                    - idUser
                    - legalAdr
                    - customer
                    - contractor
            form:
                fields:
#                    - id
                    - name
                    - hideName
                    - { property: 'user', help: 'Нельзя выбирать пользователя, у которого уже есть Юрлицо, будет ошибка...', type_options: { required: true } }
                    - legalAdr
                    - customer
                    - contractor
#            new:
#                fields:
#                    - '-id'  
        Sector: 
            class: AppBundle\Entity\Sector  
            list:
                fields:
                    - id
                    - name
                    - objects
            form:
                fields:
                    - id
                    - name
                    - { property: 'objects', type_options: { required: false } }
            new:
                fields:
                    - '-id'  
                    - '-objects'
        Object: 
            class: AppBundle\Entity\SectorObject
            list:
                sort: 'sector'
                fields:
                    - id
                    - name
                    - sector
                    - subobjects
            form:
                fields:
                    - id
                    - name
                    - { property: 'sector', type_options: { required: false } }
            new:
                fields:
                    - '-id'
        Subobject: 
            class: AppBundle\Entity\SubObject
            list:
                sort: 'object'
                fields:
                    - id
                    - name
                    - object
                    - items
            form:
                fields:
                    - id
                    - name
                    - { property: 'object', type_options: { required: false } }
            new:
                fields:
                    - '-id'
        SubObjectItem: 
            class: AppBundle\Entity\SubObjectItem
            list:
                sort: 'subobject'
                fields:
                    - id
                    - name
                    - subobject
            form:
                fields:
                    - id
                    - name
                    - { property: 'subobject', type_options: { required: false } }
            new:
                fields:
                    - '-id'            
        
vich_uploader:
    db_driver: orm       
    mappings:
        avatar_images:
            uri_prefix:         %app.path.avatar_images%
            upload_destination: %kernel.root_dir%/../web/uploads/images/avatars
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
            
liip_imagine :
    loaders:
        stream.image_filesystem:
            stream:
                wrapper: gaufrette://image/
    filter_sets:
        original: ~
        cache : ~
        thumb_from_original:
            data_loader: stream.image_filesystem
            quality: 75
            filters:
                # create a thumbnail: set size to 120x90 and use the "outbound" mode
                # to crop the image when the size ratio of the input differs
                thumbnail  : { size : [120, 160], mode : outbound }
                # create a 2px black border: center the thumbnail on a black background
                # 4px larger to create a 2px border around the final image
                #background : { size : [124, 94], position : center, color : '#000000' }
        # name our filter set "my_watermark_filter"
        my_watermark_filter:
            data_loader: stream.image_filesystem
            quality: 75
            filters:

                # use and setup the "watermark" filter
                watermark:

                    # path to the watermark file (prepended with "%kernel.root_dir%")
                    image: Resources/data/watermark.png

                    # size of the water mark relative to the input image
                    size: 0.75

                    # set the position of the watermark
                    position: center
#                watermark:
#                    image: Resources/data/watermark.png
#                    size: 0.25
#                    position: topleft   
#                watermark:
#                    image: Resources/data/watermark.png
#                    size: 0.25
#                    position: topright     
#                watermark:
#                    image: Resources/data/watermark.png
#                    size: 0.25
#                    position: bottomleft   
#                watermark:
#                    image: Resources/data/watermark.png
#                    size: 0.25
#                    position: bottomright        
    resolvers :
        default :
            web_path : ~


knp_gaufrette:
    stream_wrapper: ~
    adapters:
        image:
            local:
                directory: "%kernel.root_dir%/../web/uploads/images"
                create: true
        doc:
            local:
                directory: "%kernel.root_dir%/../web/uploads/docs"
                create: true        
    filesystems:
        image:
            adapter: image
            alias: image_filesystem
        doc:    
            adapter: doc
            alias: doc_filesystem

oneup_uploader:
    mappings:
        gallery:
            frontend: blueimp
            storage:
                type: gaufrette
                filesystem: gaufrette.image_filesystem
                stream_wrapper: gaufrette://image/   
            allowed_mimetypes: [image/png, image/jpg, image/jpeg, image/gif]
            max_size: 1M    
        doc_store:
            frontend: blueimp
            storage:
                type: gaufrette
                filesystem: gaufrette.doc_filesystem
                stream_wrapper: gaufrette://doc/  
            allowed_mimetypes: [application/pdf, application/zip, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet]
            max_size: 20M     
                
jb_file_uploader:
    resolvers:
        upload_image:
            assets:
                directory: uploads/images
        upload_doc:
            assets:
                directory: uploads/docs        
    endpoints:
        gallery:
            upload_resolver: upload_image
            upload_validators:
                Image:
                    MinWidth: 100
                    MaxWidth: 1600
                    MinHeight: 100
                    MaxHeight: 1600
            crop_validators: {} 
        doc_store:
            upload_resolver: upload_doc
            upload_validators: {}
            crop_validators: {}
            
#mewes_k_twig_excel:
#    pre_calculate_formulas: false
#    disk_caching_directory: "%kernel.cache_dir%/phpexcel"